name: 'Deploy a directory using SSH and execute a script'
description: 'Connects to a server via SSH and copies / runs scripts to / on the target'
inputs:
  key-name:
    description: 'Name of the file the private key is temporarily saved in. Defaults to `identity`.'
    required: true
    default: 'identity'
  port:
    description: 'The SSH port to use. Defaults to `22`.'
    required: true
    default: '22'
  target:
    description: 'The directory that should be used on the copy-target. Will be `/app/deploy/<target>` and `/app/data/<target>`.'
    required: true
  user:
    description: 'The SSH user that will be used to connect to the host.'
    required: true
  host:
    description: 'The SSH-server (host) to connect to.'
    required: true
  
runs:
  using: "composite"
  steps:
    - name: Use SSH - mkdir /app/<deploy and data>/<name>
      shell: bash
      run: ssh -i .ssh/${{ inputs.key-name }} -p ${{ inputs.port }} -o StrictHostKeyChecking=no ${{ inputs.user }}@${{ inputs.host }} "mkdir -p /app/deploy/${{ inputs.target }} && mkdir -p /app/data/${{ inputs.target }}"
    - name: Use SSH - chmod 777 ./deploy/*.sh
      shell: bash
      run: sudo chmod 777 ./deploy/*.sh
    - name: Use SSH - rsync deploy dir to target
      shell: bash
      run: rsync -azh -e 'ssh -i .ssh/${{ inputs.key-name }} -p '"${{ inputs.port }}"'' ./deploy/ ${{ inputs.user }}@${{ inputs.host }}:/app/deploy/${{ inputs.target }}/
    - name: Use SSH - start up.sh on target
      shell: bash
      run: ssh -i .ssh/${{ inputs.key-name }} -p ${{ inputs.port }} -o StrictHostKeyChecking=no ${{ inputs.user }}@${{ inputs.host }} "cd /app/deploy/${{ inputs.target }} && ./up.sh"
